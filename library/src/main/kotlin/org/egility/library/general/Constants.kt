/*
 * Copyright (c) Mike Brickman 2014-2017
 */

package org.egility.library.general

enum class LhoOption { COMBINED, SPLIT_ALL, SPLIT_LARGE, KCI }
enum class AnysizeOption { AS_ENTERED, CHOOSE,  LM350_S250}

val ACCESS_USER = 0
val ACCESS_KC = 1
val ACCESS_UKA = 2
val ACCESS_SYSTEM = 9

val FAULTS_ELIMINATED = 100
val FAULTS_NFC = 200
val FAULTS_NON_RUNNER = 1000

val TIME_NO_TIME = -100
val TIME_RESET = -200
val TIME_DELETE = -300

val PROGRESS_ENTERED = 0
val PROGRESS_BOOKED_IN = 10
val PROGRESS_CHECKED_IN = 20
val PROGRESS_RUNNING = 40
val PROGRESS_RUN = 50
val PROGRESS_VOID = 51

val PROGRESS_WITHDRAWN = 60
val PROGRESS_REMOVED = 70 /* entry removed (LE credit restored if UKA) */
val PROGRESS_REMOVED_GRADE_CHANGE = 71
val PROGRESS_REMOVED_HEIGHT_CHANGE = 72
val PROGRESS_REMOVED_LATE_CORRECTION = 75
val PROGRESS_INVITED = 80
val PROGRESS_TRANSFERRED = 90 /* to other class */
val PROGRESS_CONVERTED_TO_CREDIT = 91 /* converted to a late entry credit */
val PROGRESS_ENTRY_DELETED = 99 /* Pre-entry deleted */

val PROGRESS_PROCESSED_LOW=PROGRESS_BOOKED_IN
val PROGRESS_PROCESSED_HIGH=PROGRESS_VOID

val PROGRESS_DELETED_LOW = PROGRESS_REMOVED

val CLASS_PENDING = 0
val CLASS_PREPARING = 10
val CLASS_WALKING = 20
val CLASS_CLOSED_FOR_LUNCH = 25
val CLASS_RUNNING = 30
val CLASS_CLOSED = 40

val CLASS_HISTORIC = 999

val CLASS_OPEN_FOR_ENTRIES = CLASS_PENDING

val QUEUE_INITIAL = 0
val QUEUE_RINGSIDE = 10
val QUEUE_READY = 20

val ENTRY_NA = 0
val ENTRY_ONLINE_SUSPENDED = 6
val ENTRY_ONLINE_PROVISIONAL = 8
val ENTRY_PAPER = 1
val ENTRY_INVITE = 5
val ENTRY_AGILITY_PLAZA = 10
val ENTRY_IMPORTED_EXCEL = 11
val ENTRY_IMPORTED_LIVE = 12
val ENTRY_IMPORTED_UPDATED = 14
val ENTRY_IMPORTED_DELETED = 19
val ENTRY_TRANSFER = 20

val ENTRY_LATE_CREDITS = 50
val ENTRY_LATE_FEE = 51
val ENTRY_AT_SHOW = 52
val ENTRY_MANUAL = 53
val ENTRY_DEPENDENT_CLASS = 60
val ENTRY_LOW_LATE = ENTRY_LATE_CREDITS

val ENTRY_HISTORIC = 99

val CALLING_TO_END = -1

val DEVICE_UNASSIGNED = 0
val DEVICE_RING_PARTY = 10
val DEVICE_SCOREBOARD = 20
val DEVICE_SECRETARY = 30
val DEVICE_SYSTEM_MANAGER = 40

val CREDIT_PAYMENT_RECEIVED = 10
val CREDIT_CHEQUE_IN_POST = 20
val CREDIT_FETCHING_CASH = 30

val CREDIT_BLOCK_NONE = 0
val CREDIT_BLOCK_LATE_ENTRIES = 10
val CREDIT_BLOCK_ALL = 20

val VIEW_INVALIDATE = 10

val DISCIPLINE_AGILITY = 1
val DISCIPLINE_JUMPING = 2
val DISCIPLINE_STEEPLECHASE = 3
val DISCIPLINE_GAMBLERS = 4
val DISCIPLINE_SNOOKER = 5
val DISCIPLINE_POWER_AND_SPEED = 6
val DISCIPLINE_TIME_FAULT_AND_OUT = 7
val DISCIPLINE_SNAKES_AND_LADDERS = 8
val DISCIPLINE_RELAY = 20

val DISCIPLINE_SPEEDSTAKES = 50
val DISCIPLINE_MISC = 100

val CLASS_TYPE_UNDEFINED = 0
val CLASS_TYPE_REGULAR = 1
val CLASS_TYPE_SPECIAL = 2
val CLASS_TYPE_SPECIAL_GROUP = 3
val CLASS_TYPE_SPECIAL_GROUP_MEMBER = 4
val CLASS_TYPE_HARVESTED = 5
val CLASS_TYPE_RUN_OFF = 7
val CLASS_TYPE_SPECIAL_SERIES = 8
val CLASS_TYPE_SPECIAL_SERIES_MEMBER = 9
val CLASS_TYPE_SUB_CLASS = 10

val SCORING_METHOD_UNDEFINED = 0
val SCORING_METHOD_FAULTS = 1
val SCORING_METHOD_GAMES = 2
val SCORING_METHOD_MASTERS = 3
val SCORING_METHOD_JUNIOR = 4
val SCORING_METHOD_RELAY = 5
val SCORING_METHOD_TEAM_INDIVIDUAL = 6
val SCORING_METHOD_WAO_PENTATHLON = 7
val SCORING_METHOD_UK_OPEN_PENTATHLON = 8
val SCORING_METHOD_UK_OPEN_STEEPLECHASE = 9
val SCORING_METHOD_KC_CHAMP = 20
val SCORING_METHOD_KC_POINTS_DESC = 21
val SCORING_METHOD_FAULTS_AS_TIME = 30

val ENTRY_RULE_ANY_GRADE = 0
val ENTRY_RULE_GRADE1 = 1
val ENTRY_RULE_GRADE2 = 2
val ENTRY_RULE_GRADE3 = 3
val ENTRY_RULE_INVITE = 100
val ENTRY_RULE_POTD = 200
val ENTRY_RULE_CLOSED = 500
val ENTRY_RULE_MAX_CAN_ENTER_DIRECTLY = ENTRY_RULE_INVITE

val DOG_ACTIVE = 0
val DOG_RETIRED = 10
val DOG_GONE = 20
val DOG_REMOVE = 90
val DOG_ARCHIVED = 99


val WEB_TRANSACTION_ENTRY = 10
val WEB_TRANSACTION_GRADE = 20
val WEB_TRANSACTION_UKA = 30
val WEB_TRANSACTION_UKA_DIRECT = 31
val WEB_TRANSACTION_STOCK = 100


val SCORING_SCHEME_FAULTS = 1
val SCORING_SCHEME_POINTS = 2
val SCORING_SCHEME_REVERSE_POINTS = 3
val SCORING_SCHEME_GAMES_POINTS = 4

val OBSTACLE_1 = 'a'
val OBSTACLE_2 = 'b'
val OBSTACLE_3 = 'c'
val OBSTACLE_4 = 'd'
val OBSTACLE_5 = 'e'
val OBSTACLE_6 = 'f'
val OBSTACLE_7 = 'g'
val OBSTACLE_8 = 'h'
val OBSTACLE_9 = 'i'
val OBSTACLE_10 = 'j'
val OBSTACLE_11 = 'k'
val OBSTACLE_12 = 'l'
val OBSTACLE_13 = 'm'
val OBSTACLE_14 = 'n'
val OBSTACLE_15 = 'o'
val OBSTACLE_16 = 'p'
val OBSTACLE_17 = 'q'
val OBSTACLE_18 = 'r'
val OBSTACLE_19 = 's'
val OBSTACLE_20 = 't'
val OBSTACLE_21 = 'u'
val OBSTACLE_22 = 'v'
val OBSTACLE_23 = 'w'
val OBSTACLE_24 = 'x'
val OBSTACLE_25 = 'y'
val OBSTACLE_26 = 'z'

val SCORE_A = 'A'
val SCORE_BATON_FAULT = 'B'
val SCORE_CLEAR = 'C'
val SCORE_ELIMINATE_FAULT = 'D'
val SCORE_ELIMINATE = 'E'
val SCORE_FAULT = 'F'
val SCORE_G = 'G'
val SCORE_HANDLING = 'H'
val SCORE_I = 'I'
val SCORE_J = 'J'
val SCORE_K = 'K'
val SCORE_L = 'L'
val SCORE_M = 'M'
val SCORE_NFC = 'N'
val SCORE_O = 'O'
val SCORE_POLE = 'P'
val SCORE_Q = 'Q'
val SCORE_REFUSAL = 'R'
val SCORE_BONUS = 'S'
val SCORE_10 = 'T'
val SCORE_20 = 'U'
val SCORE_30 = 'V'
val SCORE_40 = 'W'
val SCORE_NO_GAMBLE = 'X'
val SCORE_GAMBLE_1 = 'Y'
val SCORE_GAMBLE_2 = 'Z'

val SCORE_0 = '0'
val SCORE_1 = '1'
val SCORE_2 = '2'
val SCORE_3 = '3'
val SCORE_4 = '4'
val SCORE_5 = '5'
val SCORE_6 = '6'
val SCORE_7 = '7'
val SCORE_8 = '8'
val SCORE_9 = '9'

val SCORE_BATON_CHANGE = '|'
val SCORE_CLOSING_SEQUENCE = ':'

val SCORE_DELETE = '~'

val PRIZE_PLACE = 0 // 1
val PRIZE_TROPHY = 1 // 2
val PRIZE_ROSETTE = 2 // 4
val PRIZE_ROSETTE_NQ = 3 //8
val PRIZE_ROSETTE_CR = 4 //16
val PRIZE_AWARD = 5 // 32

val LEDGER_ITEM_ENTRY = 10
val LEDGER_ITEM_ENTRY_SURCHARGE = 11
val LEDGER_ITEM_ENTRY_DISCOUNT = 12
val LEDGER_ITEM_ENTRY_NFC = 14
val LEDGER_ITEM_MEMBERSHIP = 110
val LEDGER_ITEM_DOG_REGISTRATION = 120
val LEDGER_ITEM_AFFIX = 130
val LEDGER_ITEM_CAMPING = 150
val LEDGER_ITEM_CAMPING_WITH_HOOK_UP = 151
val LEDGER_ITEM_CAMPING_PERMIT = 160
val LEDGER_ITEM_CAMPING_CONFIRMED = 161
val LEDGER_ITEM_CAMPING_DEPOSIT = 162
val LEDGER_ITEM_POSTAGE = 170
val LEDGER_ITEM_PAPER = 180
val LEDGER_ITEM_PAPER_ADMIN = 181
val LEDGER_ITEM_HELPER_DISCOUNT = 190
val LEDGER_ITEM_ELECTRIC_HOOK_UP = 200
val LEDGER_ITEM_VIDEO = 210
val LEDGER_ITEM_ADMISSION_TICKET = 211
val LEDGER_ITEM_ADMISSION_TICKET_CHILD = 212
val LEDGER_ITEM_ADMISSION_TICKET_FAMILY = 214
val LEDGER_ITEM_MEAL_TICKET = 213
val LEDGER_ITEM_CLOTHING = 220

val LEDGER_ITEM_SECOND_CHANCE = 230

val LEDGER_ITEM_EXTRA_MIN = 200
val LEDGER_ITEM_EXTRA_MAX = 299

val LEDGER_ITEM_BANKING_FEE = 300
val LEDGER_ITEM_ENTRY_CREDIT = 1000
val LEDGER_ITEM_CAMPING_CREDIT = 1010

val LEDGER_ITEM_REBATE = 400
val LEDGER_ITEM_PAYMENT = 500
val LEDGER_ITEM_MIN_PAYMENT = LEDGER_ITEM_REBATE

val LEDGER_STRIPE_RECEIPT = 10
val LEDGER_ELECTRONIC_RECEIPT = 20
val LEDGER_ELECTRONIC_PAYMENT = 21
val LEDGER_UKA_TRANSFER = 22
val LEDGER_ELECTRONIC_REFUND = 23
val LEDGER_SWAP_TRANSFER = 24

val LEDGER_TRANSFER_OUT = 25
val LEDGER_TRANSFER_IN = 26

val LEDGER_CAMPING_TRANSFER_OUT = 27
val LEDGER_CAMPING_TRANSFER_IN = 28

val LEDGER_PAPER_ENTRY_CHEQUE = 30
val LEDGER_PAPER_ENTRY_CASH = 31

val LEDGER_ENTRY_FEES_REFUND = 40
val LEDGER_ELECTRONIC_DONATION = 41

val LEDGER_TOP_UP_HANDLING_FEE = 100
val LEDGER_TOP_UP_HANDLING_FEE_REFUND = 101
val LEDGER_STRIPE_REFUND = 110
val LEDGER_ENTRY_FEES = 200
val LEDGER_ENTRY_FEES_PAPER = 201
val LEDGER_ENTRY_FEES_CANCELLED = 202
val LEDGER_ENTRY_FEES_CANCELLED_PAPER = 203
val LEDGER_CAMPING_PERMIT = 210
val LEDGER_CAMPING_PERMIT_PAPER = 211
val LEDGER_CAMPING_PERMIT_CANCELLED = 212
val LEDGER_CAMPING_PERMIT_CANCELLED_PAPER = 213
val LEDGER_CAMPING_DEPOSIT = 215

val LEDGER_CAMPING_FEES = 220

val LEDGER_COMPETITION_CREDIT = 240

val LEDGER_UKA_REGISTRATION = 300
val LEDGER_UKA_REGISTRATION_DIRECT = 301
val LEDGER_UKA_REGISTRATION_PAID = 310
val LEDGER_UKA_REGISTRATION_REFUND = 320
val LEDGER_STRIPE_FEE = 400

val LEDGER_MISC_FEE = 540
val LEDGER_FUEL = 541
val LEDGER_POSTAGE = 542
val LEDGER_GRATUITY = 545


val ACCOUNT_HSBC = 100
val ACCOUNT_STARLING = 101
val ACCOUNT_ALDERMORE = 102
val ACCOUNT_STRIPE_PEND = 110
val ACCOUNT_UKA_XFER = 120
val ACCOUNT_SWAP_XFER = 121
val ACCOUNT_SHOW_CASH_BOX = 130
val ACCOUNT_SHOW_HOLDING = 140
val ACCOUNT_UKA_HOLDING = 150
val ACCOUNT_UKA_HOLDING_DIRECT = 151

val ACCOUNT_SWAP = 200
val ACCOUNT_PRINT = 201
val ACCOUNT_EXPENSE = 202

val ACCOUNT_USER = 1000
val ACCOUNT_TRANSFERS = 1010
val ACCOUNT_TOP_UP_FEE = 1200
val ACCOUNT_STRIPE_IN = 1300
val ACCOUNT_ADMIN = 1400
val ACCOUNT_BANK_FEES = 1500
val ACCOUNT_PLAZA_HOLDING = 2000
val ACCOUNT_UNKNOWN = 9000

val ACCOUNT_UKA_MEMBER = 9100
val ACCOUNT_UKA_CASH_BOX = 9110
val ACCOUNT_UKA_SHOW_HOLDING = 9120


val ENTRY_DELETED_NO_FUNDS = 10
val ENTRY_DELETED_USER = 20
val ENTRY_DELETED_SHOW_SECRETARY = 30


val PIN_GENERAL = 0
val PIN_SECRETARY = 10
val PIN_ACCOUNTS = 11
val PIN_MEASURE = 12
val PIN_SYSTEM_MANAGER = 20

val UKA_NOT_REGISTERED = 0
val UKA_INCOMPLETE = 10
val UKA_SUSPENDED = 21
val UKA_EXPIRED = 100
val UKA_COMPLETE = 200

val UKA_REGISTRATION_PLAZA = 10
val UKA_REGISTRATION_POST = 20
val UKA_REGISTRATION_SHOW = 30

val VOUCHER_MEMBER = 10
val VOUCHER_COMMITTEE = 20
val VOUCHER_JUDGE = 30
val VOUCHER_RING_MANAGER = 32
val VOUCHER_SCRIME = 33
val VOUCHER_RING_PARTY = 34
val VOUCHER_HELPER = 40
val VOUCHER_MEASURER =50
val VOUCHER_SYSTEM_MANAGER = 100

val VOUCHER_CAMPING_PERMIT = 200



val CAMPING_NOT_PROCESSED = 0
val CAMPING_WAITING_LIST = 10
val CAMPING_PROVISIONAL = 20
val CAMPING_ALLOCATED = 30

val CAMPING_REGULAR = 0
val CAMPING_PRIORITY = 10
val CAMPING_RESERVED = 20


val ACTION_DO_NOTHING = 0
val ACTION_ADD_LEDGER = 1
val ACTION_PAYMENT_REFUND = 2
val ACTION_RETURN_CHEQUE = 3
val ACTION_UN_DELETE = 4

val ITEM_UNDEFINED = 0
val ITEM_LATE_ENTRY_PAID = 10
val ITEM_LATE_ENTRY_DISCRETIONARY = 20
val ITEM_LATE_ENTRY_STAFF = 30
val ITEM_LATE_ENTRY_UKA = 31
val ITEM_LATE_ENTRY_TRANSFER = 35
val ITEM_SPECIAL_CLASS = 40 // Masters
val ITEM_CAMPING = 60
val ITEM_ON_ACCOUNT = 150
val ITEM_REGISTRATION = 160

val LATE_ENTRY_PAID = ITEM_LATE_ENTRY_PAID
val LATE_ENTRY_DISCRETIONARY = ITEM_LATE_ENTRY_DISCRETIONARY
val LATE_ENTRY_STAFF = ITEM_LATE_ENTRY_STAFF
val LATE_ENTRY_UKA = ITEM_LATE_ENTRY_UKA
val LATE_ENTRY_TRANSFER = ITEM_LATE_ENTRY_TRANSFER


val PAYMENT_UNDEFINED = 0
val PAYMENT_CREDITS = 5
val PAYMENT_CASH = 10
val PAYMENT_CHEQUE = 20
val PAYMENT_IN_POST = 30
val PAYMENT_IOU = 40
val PAYMENT_MIXED = 50

val TEAM_SINGLE_HANDLER = 0
val TEAM_LINKED_OTHER = 10
val TEAM_NAMED_HANDLER = 20

val TEAM_DUAL_HANDLER = 90

val TEAM_MULTIPLE = 100

// DEFUNCT
val TEAM_UKA_SPLIT_PAIR = 30
val TEAM_UKA_TEAM = 40
val TEAM_KC_PAIR = 50


val PROGRAMME_NONE = 0
val PROGRAMME_PERFORMANCE = 1
val PROGRAMME_STEEPLECHASE = 2



val DAY_UNDEFINED = 0
val DAY_REGULAR = 1
val DAY_SPECIAL = 2
val DAY_REST = 3

val ORGANIZATION_KC = 1
val ORGANIZATION_UKA = 2
val ORGANIZATION_UK_OPEN = 3
val ORGANIZATION_FAB = 4
val ORGANIZATION_IFCS = 5
val ORGANIZATION_INDEPENDENT = 100

val PROCESSOR_UNKNOWN = 0
val PROCESSOR_PLAZA = 1
val PROCESSOR_ASO = 2
val PROCESSOR_FPP = 3
val PROCESSOR_SHOW_TIME = 4
val PROCESSOR_AGILITY_AID = 5
val PROCESSOR_AGILITY_TIME = 6
val PROCESSOR_LN = 7
val PROCESSOR_SWAP = 8
val PROCESSOR_AGILITUM = 9
val PROCESSOR_LONGHEDGE = 10
val PROCESSOR_MY_AGILE_DOG = 11


val PART_TYPE_UNDEFINED = 0
val PART_TYPE_NUMBER_SPLIT = 1
val PART_TYPE_GRADE_SPLIT = 2
val PART_TYPE_HEIGHT_SPLIT = 3

val CAMPING_CAP_UNCAPPED = 0
val CAMPING_CAP_MONITOR = 10
val CAMPING_CAP_DEPOSIT = 20
val CAMPING_CAP_DEPOSIT_PARTIALLY_REFUNDABLE = 21
val CAMPING_CAP_DEPOSIT_FULLY_REFUNDABLE = 22

val ERROR_NONE = 0
val ERROR_CAMPING_TRANSFER_NOT_CONFIRMED = 5000
val ERROR_CAMPING_TRANSFER_NOT_NOT_PAID = 5001
val ERROR_CAMPING_TRANSFER_LEDGER_MISSING = 5002
val ERROR_CAMPING_TRANSFER_ALREADY_HAS_CAMPING = 5003
val ERROR_CAMPING_TRANSFER_PAPER = 5004
val ERROR_CAMPING_TRANSFER_FREE = 5005

val STOCK_BOOK_IN = 1
val STOCK_BOOK_OUT = 2
val STOCK_CHECK = 3
val STOCK_WORKSHOP = 4
val STOCK_AQUIRE = 10
val STOCK_DISPOSE = 20
val STOCK_LOAN = 30

val LOCATION_STOCK = 1
val LOCATION_SHOW = 2
val LOCATION_UKA = 3
val LOCATION_AGENT = 4
val LOCATION_WORKSHOP = 5

val LOCATION_OTHER_MISSING = 90
val LOCATION_OTHER_BROKEN = 91
val LOCATION_OTHER_PARTS = 92
val LOCATION_OTHER_DISPOSED = 99

val PICKING_LIST_ITEM = 0
val PICKING_LIST_SUB_ITEM = 1
val PICKING_LIST_HEADING = 2

val LEAGUE_UKA_JUNIOR = 1


val DOG_OWNER_SINGLE = 0
val DOG_OWNER_HOUSEHOLD = 1
val DOG_OWNER_OTHER = 2

val TIME_UNKNOWN = 0
val TIME_FROM_PEER = 5
val TIME_MANUAL = 10
val TIME_INTERNET = 20

fun campingCapToText(code: Int): String {
    return when (code) {
        CAMPING_CAP_MONITOR -> "Monitor"
        CAMPING_CAP_DEPOSIT -> "Deposit"
        CAMPING_CAP_DEPOSIT_PARTIALLY_REFUNDABLE -> "Deposit Partially Refundable"
        CAMPING_CAP_DEPOSIT_FULLY_REFUNDABLE -> "Deposit Refundable"
        else -> "Not Capped"
    }
}

fun textToCampingCap(text: String): Int {
    return when {
        text eq "Monitor" -> CAMPING_CAP_MONITOR
        text eq "Deposit" -> CAMPING_CAP_DEPOSIT
        text eq "Deposit Partially Refundable" -> CAMPING_CAP_DEPOSIT_PARTIALLY_REFUNDABLE
        text eq "Deposit Refundable" -> CAMPING_CAP_DEPOSIT_FULLY_REFUNDABLE
        else -> CAMPING_CAP_UNCAPPED
    }
}

// granite bits
val GRANITE_BOOKING_IN = 0
val GRANITE_EGILITY_CODES = 1

val REGISTRATION_COMPLETE = 100

fun transactionToText(code: Int): String {
    return when (code) {
        LEDGER_ITEM_ENTRY -> "Entry Fee"
        LEDGER_ITEM_ENTRY_NFC -> "Entry NFC"
        LEDGER_ITEM_ENTRY_SURCHARGE -> "Entry Surcharge"
        LEDGER_ITEM_ENTRY_DISCOUNT -> "Entry Discount"
        LEDGER_ITEM_MEMBERSHIP -> "UKA Membership Fee"
        LEDGER_ITEM_DOG_REGISTRATION -> "UKA Dog Registration"
        LEDGER_ITEM_AFFIX -> "Affix Fee"
        LEDGER_ITEM_CAMPING -> "Camping"
        LEDGER_ITEM_CAMPING_WITH_HOOK_UP -> "Camping (Hook up)"
        LEDGER_ITEM_CAMPING_PERMIT -> "Camping Permit"
        LEDGER_ITEM_CAMPING_CONFIRMED -> "Camping (Pre-paid)"
        LEDGER_ITEM_POSTAGE -> "Ring Card Postage"
        LEDGER_ITEM_PAPER -> "Paper Admin/Postage"
        LEDGER_ITEM_PAPER_ADMIN -> "Paper Admin"
        LEDGER_ITEM_HELPER_DISCOUNT -> "Helper Discount"
        LEDGER_ITEM_ELECTRIC_HOOK_UP -> "Hook up"
        LEDGER_ITEM_VIDEO -> "Video Pack"
        LEDGER_ITEM_ADMISSION_TICKET -> "Additional Ticket"
        LEDGER_ITEM_ADMISSION_TICKET_CHILD ->  "Additional Ticket (Child)"
        LEDGER_ITEM_MEAL_TICKET -> "Additional Meal Ticket"
        LEDGER_ITEM_CLOTHING -> "Clothing"
        LEDGER_ITEM_BANKING_FEE -> "Banking Fee"
        LEDGER_ITEM_PAYMENT -> "Payment"
        LEDGER_ITEM_ENTRY_CREDIT -> "Voucher Credit"
        LEDGER_ITEM_CAMPING_CREDIT -> "Voucher Credit (Camping)"
        LEDGER_ITEM_REBATE -> "Rebate"
        LEDGER_ITEM_SECOND_CHANCE -> "Second Chance Ticket"
        else -> "Transaction type $code"
    }
}

fun classToText(code: Int): String {
    when (code) {
        CLASS_PENDING -> return "Not Open"
        CLASS_PREPARING -> return "Setting Up"
        CLASS_WALKING -> return "Walking"
        CLASS_CLOSED_FOR_LUNCH -> return "Closed for Lunch"
        CLASS_RUNNING -> return "Running"
        CLASS_CLOSED -> return "Closed"
        CLASS_HISTORIC -> return "Historic"
        else -> return "Undefined"
    }
}

fun deviceToText(code: Int): String {
    when (code) {
        DEVICE_UNASSIGNED -> return "Unassigned"
        DEVICE_RING_PARTY -> return "Ring Party"
        DEVICE_SCOREBOARD -> return "Scoreboard"
        DEVICE_SECRETARY -> return "Secretary"
        DEVICE_SYSTEM_MANAGER -> return "System Manager"
        else -> return "Undefined"
    }
}

fun entryProgressToText(code: Int): String {
    when (code) {
        PROGRESS_ENTERED -> return "Entered"
        PROGRESS_BOOKED_IN -> return "Booked In"
        PROGRESS_CHECKED_IN -> return "Checked In"
        PROGRESS_RUNNING -> return "Running"
        PROGRESS_RUN -> return "Run"
        PROGRESS_WITHDRAWN -> return "Withdrawn"
        PROGRESS_REMOVED -> return "Removed"
        PROGRESS_TRANSFERRED -> return "Removed"
        PROGRESS_CONVERTED_TO_CREDIT -> return "Removed"
        PROGRESS_ENTRY_DELETED -> return "Removed"
        else -> return "Undefined"
    }
}

fun organizationToSuffix(code: Int): String {
    when (code) {
        ORGANIZATION_KC -> return "kc"
        ORGANIZATION_UKA -> return "uka"
        ORGANIZATION_UK_OPEN -> return "uk_open"
        ORGANIZATION_FAB -> return "fab"
        ORGANIZATION_INDEPENDENT -> return "ind"
        else -> return "zzz"
    }
}

fun voucherToText(code: Int): String {
    when (code) {
        VOUCHER_MEMBER -> return "Member"
        VOUCHER_COMMITTEE -> return "Committee Member"
        VOUCHER_JUDGE -> return "Judge"
        VOUCHER_RING_MANAGER -> return "Ring Manager"
        VOUCHER_SCRIME -> return "Scrime"
        VOUCHER_RING_PARTY -> return "Ring Party"
        VOUCHER_HELPER -> return "Helper"
        VOUCHER_MEASURER -> return "Measurer"
        VOUCHER_SYSTEM_MANAGER -> return "System Manager"
        else -> return "Other"
    }
}

val ASSET_CONTROL_BOX = 1
val ASSET_TABLET = 2
val ASSET_PRINTER = 3
val ASSET_COMPUTER = 4
val ASSET_DONGLE = 10
val ASSET_CHARGE_BRICK = 20
val ASSET_POWER_PACK = 21
val ASSET_MAINS_EXTENSION = 22
val ASSET_CRATE = 23
val ASSET_RING_PARTY_GUIDE = 24
val ASSET_RING_PARTY_BOX = 25
val ASSET_TRIPOD = 26
val ASSET_WHAM_STORAGE_BOX = 27

fun assetToText(code: Int): String {
    return when (code) {
        ASSET_CONTROL_BOX ->  "Control Box"
        ASSET_TABLET ->  "Tablet"
        ASSET_PRINTER ->  "Printer"
        ASSET_COMPUTER ->  "Computer"
        ASSET_DONGLE ->  "Dongle"
        ASSET_CHARGE_BRICK ->  "Charge Brick"
        ASSET_POWER_PACK ->  "Power Pack"
        ASSET_MAINS_EXTENSION ->  "Mains Extension"
        ASSET_CRATE ->  "Collapsible Crate"
        ASSET_RING_PARTY_GUIDE ->  "User Guide"
        ASSET_RING_PARTY_BOX ->  "Ring Party Box"
        ASSET_TRIPOD ->  "Tripod"
        ASSET_WHAM_STORAGE_BOX ->  "Wham Storage Box"
        else ->  "Other"
    }
}

fun assetToTextPlural(code: Int): String {
    val word = assetToText(code)
    return if (word.last().toString().oneOf("s", "x")) word + "es" else word+ "s"
} 

fun idProcesssorToText(idProcessor: Int): String {
    return when (idProcessor) {
        PROCESSOR_PLAZA ->  "Plaza"
        PROCESSOR_ASO ->  "ASO"
        PROCESSOR_FPP ->  "FPP"
        PROCESSOR_SHOW_TIME ->  "Show Time"
        PROCESSOR_AGILITY_AID ->  "Agility Aid"
        PROCESSOR_AGILITY_TIME ->  "Agility Time"
        PROCESSOR_LN ->  "L & N"
        PROCESSOR_SWAP ->  "SWAP"
        PROCESSOR_AGILITUM ->  "Agilitum"
        PROCESSOR_LONGHEDGE ->  "Longhedge"
        PROCESSOR_MY_AGILE_DOG ->  "My Agile"
        else ->  "n/a"
    }

}